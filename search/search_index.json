{
    "config": { "lang": ["en"], "separator": "[\\s\\-]+", "pipeline": ["stopWordFilter"] },
    "docs": [
        {
            "location": "",
            "title": "Welcome to ZetsuBou",
            "text": "<p>This is a self-hosted web application for your own image galleries and videos on the Linux operating system.</p> Currently we only support the Linux operating system <p>Other operating systems are not supported due to time constraints.</p> We will generate folders <code>.tag</code> in your galleries <p>ZetsuBou would generate <code>.tag</code> folders inside your galleries. Here is an example of the folder structure.</p> <pre><code>&lt;your image galleries&gt;\n\u251c\u2500\u2500 &lt;your image gallery 001&gt;\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 1.jpg\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 2.jpg\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 3.jpg\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 4.jpg\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 5.jpg\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 .tag\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 gallery.json\n\u2514\u2500\u2500 &lt;your image gallery 002&gt;\n    \u251c\u2500\u2500 1.jpg\n    \u251c\u2500\u2500 2.jpg\n    \u251c\u2500\u2500 3.jpg\n    \u251c\u2500\u2500 4.jpg\n    \u2514\u2500\u2500 .tag\n        \u2514\u2500\u2500 gallery.json\n</code></pre> <p></p>"
        },
        {
            "location": "developer-notes/architecture/",
            "title": "Architecture",
            "text": "<pre><code>---\ntitle: ZetsuBou architecture\n---\nclassDiagram\n    class Network {\n        port: 3000 (ZetsuBou)\n        port: 9000 (MinIO)\n    }\n    class ZetsuBou{\n        port: 3000\n    }\n    class Airflow{\n        port: 8080\n    }\n    class Elasticsearch{\n        port: 9200\n    }\n    class MinIO{\n        port: 9000\n        port: 9001\n    }\n    class PostgreSQL{\n        port: 5430\n    }\n    class Redis{\n        port: 6380\n    }\n    ZetsuBou &lt;|-- Airflow\n    ZetsuBou &lt;|-- Elasticsearch\n    ZetsuBou &lt;|-- MinIO\n    ZetsuBou &lt;|-- PostgreSQL\n    ZetsuBou &lt;|-- Redis\n    Airflow &lt;|-- Elasticsearch\n    Airflow &lt;|-- MinIO\n    Airflow &lt;|-- PostgreSQL\n    Airflow &lt;|-- Redis\n    Network &lt;|-- ZetsuBou\n    Network &lt;|-- MinIO</code></pre> Services Description Airflow Manage the tasks, e.g. synchronization, creating a video cover, and so on. Elasticsearch Search engine. MinIO An object storage for hosting images, videos, and files. PostgreSQL An object-relational database. Redis Maintain the status of tasks."
        },
        { "location": "developer-notes/environments/", "title": "Environments", "text": "" },
        {
            "location": "developer-notes/environments/#set-up-an-environment",
            "title": "Set up an environment",
            "text": ""
        },
        {
            "location": "developer-notes/environments/#npm",
            "title": "NPM",
            "text": "<p>We use commitlint and prettier to format the codes.</p> <pre><code># To install commitlint and prettier\nnpm install --also=dev\n# To test commitlint\nnpx commitlint --from \"HEAD~1\" --to \"HEAD\" --verbose\n</code></pre>"
        },
        {
            "location": "developer-notes/environments/#rust",
            "title": "Rust",
            "text": "<p>Rust is used to tune performance. We use pyo3 as the bindings between Python and Rust.</p> <pre><code>curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n</code></pre>"
        },
        {
            "location": "developer-notes/environments/#build-the-docker-images",
            "title": "Build the docker images",
            "text": "<pre><code>make build\n</code></pre> <p>This command will build <code>zetsubou/app:0.0.1-python-3.8.16-slim-buster</code> and <code>zetsubou/airflow:2.6.1-python3.8</code> docker images.</p>"
        },
        {
            "location": "developer-notes/environments/#install-the-python-packages",
            "title": "Install the Python packages",
            "text": "<p>We use poetry to organize the Python packages .</p> <pre><code>poetry install\n</code></pre> <p>The pre-commit is used to hook the formatters and validators.</p> <pre><code>pre-commit install\n</code></pre>"
        },
        {
            "location": "developer-notes/environments/#build-frontend",
            "title": "Build frontend",
            "text": "<pre><code>cd front\nnpm install --also=dev\nnpm run build\ncd ..\n</code></pre>"
        },
        {
            "location": "developer-notes/environments/#build-documentation",
            "title": "Build documentation",
            "text": "<p>Create the static docs files in <code>./front/doc_site</code>.</p> <pre><code>make docs\n</code></pre>"
        },
        {
            "location": "developer-notes/environments/#run",
            "title": "Run",
            "text": "<p>Create the volumes under <code>./dev</code> relative to the current working directory, initialize the Airflow, and generate <code>./etc/settings.env</code> and <code>./etc/settings.airflow.env</code> settings files.</p> <pre><code>make init-example\n</code></pre> <p>Start the services with Docker containers except the ZetsuBou web application.</p> <pre><code>make up-dev\n</code></pre> <p>Run the ZetsuBou web application in Python CLI.</p> PythonWith Poetry <pre><code>python cli.py run\n</code></pre> <pre><code>poetry run python cli.py run\n</code></pre> <p>Or you can run <code>app.py</code> directly if you need to.</p> PythonWith Poetry <pre><code>python app.py\n</code></pre> <pre><code>poetry run python app.py\n</code></pre>"
        },
        {
            "location": "developer-notes/environments/#run-before-you-push-the-codes",
            "title": "Run before you push the codes",
            "text": "<p>You should run the following command for every commit or you can run the commands manually.</p> MakefileManually <pre><code>make lint\n</code></pre> <pre><code># To format the files\npre-commit run --all-files\n# To check the commit format. This command checks only one commit. If you want to\n# check multiple commits, you can change the number in `HEAD~1`.\nnpx commitlint --from \"HEAD~1\" --to \"HEAD\" --verbose\n</code></pre>"
        },
        {
            "location": "developer-notes/environments/#recommended-vscode-extensions",
            "title": "Recommended VScode extensions",
            "text": "Extensions Description bradlc.vscode-tailwindcss For Tailwindcss autocomplete. ms-python.isort To automatically sort the Python import. redhat.vscode-yaml For yaml autocomplete, e.g. <code>mkdocs.yml</code>."
        },
        { "location": "getting-started/launch-an-example/", "title": "Launch an example", "text": "" },
        {
            "location": "getting-started/launch-an-example/#copy-the-files",
            "title": "Copy the files",
            "text": "<p>Clone the project from github repository.</p> <pre><code>git clone https://github.com/ZetsuBouKyo/ZetsuBou\n</code></pre>"
        },
        {
            "location": "getting-started/launch-an-example/#build-the-docker-images",
            "title": "Build the docker images",
            "text": "<pre><code>make build\n</code></pre> <p>This command will build <code>zetsubou/app:0.0.1-python-3.8.16-slim-buster</code> and <code>zetsubou/airflow:2.6.1-python3.8</code> docker images.</p>"
        },
        {
            "location": "getting-started/launch-an-example/#initialization",
            "title": "Initialization",
            "text": "<p>Create the volumes under <code>./dev</code> relative to the current working directory, and <code>./etc/analysis/synonym.txt</code>.</p> <pre><code>make init\n</code></pre>"
        },
        {
            "location": "getting-started/launch-an-example/#start-the-services",
            "title": "Start the services",
            "text": "<pre><code># To start the services\nmake up\n</code></pre> <p>After <code>make up</code> command, you can find the username, password, and other information in <code>./etc/settings.env</code>. The default URL for the application is http://localhost:3000 .</p>"
        },
        {
            "location": "user-notes/searching/",
            "title": "Introduction",
            "text": "<p>Our search mechanism is based on Elasticsearch. We store the gallery, video, and tag information in JSON format.</p> <p>There are 3 ways to search the content in the Web UI.</p> <ul> <li>Search in the top input element of the navigation.</li> <li>Search in the top input element of the navigation with additional parameters.</li> <li>Advanced search.</li> </ul>"
        },
        {
            "location": "user-notes/searching/#normal-search",
            "title": "Normal search",
            "text": "<p>The HTML input element in the top navigation is the entry point for the text search. It supports some special search grammar, e.g. including or excluding field value under specific field name.</p> Field name and field value <p>For example, we have a JSON file:</p> <pre><code>{\n...\n\"tags\": {\n\"langauge\": [\"Chinese\", \"English\"]\n}\n...\n}\n</code></pre> <p><code>tags</code> is the field name. <code>Chinese</code> or <code>English</code> is the field value.</p> Web screenshot <p></p>"
        },
        { "location": "user-notes/searching/#grammar", "title": "Grammar", "text": "" },
        {
            "location": "user-notes/searching/#special-character",
            "title": "Special character",
            "text": "Operator Description <code>-</code> Exclude for field name or field value under specific field name. <code>\"</code> Everything between the quotes after the <code>=</code> character is treated as a field value. <code>=</code> Separator for field name and field value."
        },
        {
            "location": "user-notes/searching/#examples",
            "title": "Examples",
            "text": "Developer notes <p>This section is generated by <code>python cli.py build docs print-search-grammar-examples</code>.</p> <ul> <li>Excludes all documents that have a <code>tags.language</code> field.</li> </ul> InputElasticsearch <pre><code>-tags.language\n</code></pre> <pre><code>{\n\"bool\": {\n\"should\": [],\n\"must_not\": [\n{\n\"exists\": {\n\"field\": \"tags.language\"\n}\n}\n]\n}\n}\n</code></pre> <ul> <li>Excludes documents that have an <code>english</code> value in a <code>tags.language</code> field.</li> </ul> InputElasticsearch <pre><code>-tags.language=english\n</code></pre> <p>or</p> <pre><code>-tags.language=\"english\"\n</code></pre> <p>or</p> <pre><code>-\"tags.language\"=english\n</code></pre> <p>or</p> <pre><code>-\"tags.language\"=\"english\"\n</code></pre> <pre><code>{\n\"bool\": {\n\"should\": [],\n\"must_not\": [\n{\n\"term\": {\n\"tags.language.keyword\": {\n\"value\": \"english\"\n}\n}\n}\n]\n}\n}\n</code></pre> <ul> <li>Includes documents that have a <code>\u4e2d\u6587</code> value in a <code>tags.language</code> field.</li> </ul> InputElasticsearch <pre><code>tags.language=\u4e2d\u6587\n</code></pre> <p>or</p> <pre><code>tags.language=\"\u4e2d\u6587\"\n</code></pre> <p>or</p> <pre><code>\"tags.language\"=\u4e2d\u6587\n</code></pre> <p>or</p> <pre><code>\"tags.language\"=\"\u4e2d\u6587\"\n</code></pre> <pre><code>{\n\"bool\": {\n\"should\": [\n{\n\"constant_score\": {\n\"filter\": {\n\"multi_match\": {\n\"query\": \"\u4e2d\u6587\",\n\"fuzziness\": 0,\n\"fields\": \"tags.language.*\"\n}\n}\n}\n}\n],\n\"must_not\": []\n}\n}\n</code></pre> <ul> <li>Includes documents that have a <code>=\u4e2d\u6587</code> value in a <code>tags.language</code> field.</li> </ul> InputElasticsearch <pre><code>tags.language==\u4e2d\u6587\n</code></pre> <pre><code>{\n\"bool\": {\n\"should\": [\n{\n\"constant_score\": {\n\"filter\": {\n\"multi_match\": {\n\"query\": \"=\u4e2d\u6587\",\n\"fuzziness\": 0,\n\"fields\": \"tags.language.*\"\n}\n}\n}\n}\n],\n\"must_not\": []\n}\n}\n</code></pre> <ul> <li>Includes documents that have a <code>=\u4e2d=\u6587=</code> value in a <code>tags.language</code> field.</li> </ul> InputElasticsearch <pre><code>tags.language==\u4e2d=\u6587=\n</code></pre> <pre><code>{\n\"bool\": {\n\"should\": [\n{\n\"constant_score\": {\n\"filter\": {\n\"multi_match\": {\n\"query\": \"=\u4e2d=\u6587=\",\n\"fuzziness\": 0,\n\"fields\": \"tags.language.*\"\n}\n}\n}\n}\n],\n\"must_not\": []\n}\n}\n</code></pre> <ul> <li>Includes documents that have an <code>English (UK)</code> value in a <code>tags.language</code> field.</li> </ul> InputElasticsearch <pre><code>tags.language=\"English (UK)\"\n</code></pre> <pre><code>{\n\"bool\": {\n\"should\": [\n{\n\"constant_score\": {\n\"filter\": {\n\"multi_match\": {\n\"query\": \"English (UK)\",\n\"fuzziness\": 0,\n\"fields\": \"tags.language.*\"\n}\n}\n}\n}\n],\n\"must_not\": []\n}\n}\n</code></pre> <ul> <li>If there is an odd number of quotes, it is treated as a normal keyword string.</li> </ul> InputElasticsearch <pre><code>\"[\"\u793e\u6703\" (\u6b77\u53f2)] \u4eca\u5929\u5929\u6c23\u771f\u597d=(\u4e09\u570b\u6f14\u7fa9) [Chn]\n</code></pre> <pre><code>{\n\"bool\": {\n\"should\": [\n{\n\"constant_score\": {\n\"filter\": {\n\"multi_match\": {\n\"query\": \"\\\"[\\\"\u793e\u6703\\\"\",\n\"fuzziness\": 0,\n\"fields\": [\n\"tags.*\"\n]\n}\n}\n}\n},\n{\n\"constant_score\": {\n\"filter\": {\n\"multi_match\": {\n\"query\": \"(\u6b77\u53f2)]\",\n\"fuzziness\": 0,\n\"fields\": [\n\"tags.*\"\n]\n}\n}\n}\n},\n{\n\"constant_score\": {\n\"filter\": {\n\"multi_match\": {\n\"query\": \"\u4eca\u5929\u5929\u6c23\u771f\u597d=(\u4e09\u570b\u6f14\u7fa9)\",\n\"fuzziness\": 0,\n\"fields\": [\n\"tags.*\"\n]\n}\n}\n}\n},\n{\n\"constant_score\": {\n\"filter\": {\n\"multi_match\": {\n\"query\": \"[Chn]\",\n\"fuzziness\": 0,\n\"fields\": [\n\"tags.*\"\n]\n}\n}\n}\n}\n],\n\"must_not\": []\n}\n}\n</code></pre>"
        },
        {
            "location": "user-notes/searching/#with-additional-parameters",
            "title": "With additional parameters",
            "text": "<p>At the end of the top input navigation, near the magnifier icon, there is a rounded-expand-more icon. Click on the rounded-expand-more icon to expand the dropdown.</p> Web screenshot <p></p> <p>Here are the parameters.</p> Parameter Description Base The order of returning results. Analyzer The algorithm used to convert the text into tokens. Fuzziness Fuzziness<sup>1</sup> of the text search. Boolean The relationship between keywords. Custom The custom Elasticsearch query."
        },
        { "location": "user-notes/searching/#additional-parameters", "title": "Additional parameters", "text": "" },
        {
            "location": "user-notes/searching/#base",
            "title": "Base",
            "text": "<p><code>Search</code> performs the default search which will split the input text with space and searches that splitted keywords in mutiple fields.</p> <p><code>Random</code> will return the same results as Search, but they will be returned randomly.</p>"
        },
        {
            "location": "user-notes/searching/#analyzer",
            "title": "Analyzer",
            "text": "<p>The word <code>Analyzer</code> has two meanings in ZetsuBou. One is the <code>Elasticsearch Analyzer</code> and the other is the <code>Web Search Analyzer</code>.</p> <p><code>Elasticsearch Analyzer</code> is a field name of the form <code>*.&lt;analyzer&gt;</code>. For example, <code>raw_name.default</code> means field name <code>raw_name</code> and analyzer <code>default</code>.</p> <p><code>Web Search Analyzer</code> is a dropdown list in the Web UI. It is a combination of the <code>Elasticsearch Analyzer</code>.</p> Developer notes <p>You can see the following tabs in JSON format by <code>python cli.py build docs print-web-search-analyzer</code>.</p> <p>The following two tabs are the details of <code>Web Search Analyzer</code>.</p> GalleryVideo <p>Default</p> Full field name Field name Elasticsearch analyzer path.url path url name.default name default raw_name.default raw_name default src.url src url attributes.category attributes.category keyword attributes.uploader attributes.uploader keyword labels labels keyword tags.* tags.* keyword <p>Keyword</p> Full field name Field name Elasticsearch analyzer path.keyword path keyword name.keyword name keyword raw_name.keyword raw_name keyword src.keyword src keyword attributes.category attributes.category keyword attributes.uploader attributes.uploader keyword labels labels keyword tags.* tags.* keyword <p>Ngram</p> Full field name Field name Elasticsearch analyzer path.ngram path ngram name.ngram name ngram raw_name.ngram raw_name ngram src.ngram src ngram attributes.category attributes.category keyword attributes.uploader attributes.uploader keyword labels labels keyword tags.* tags.* keyword <p>Standard</p> Full field name Field name Elasticsearch analyzer path.standard path standard name.standard name standard raw_name.standard raw_name standard src.standard src standard attributes.category attributes.category keyword attributes.uploader attributes.uploader keyword labels labels keyword tags.* tags.* keyword <p>URL</p> Full field name Field name Elasticsearch analyzer path.url path url src.url src url <p>Default</p> Full field name Field name Elasticsearch analyzer path.url path url name.default name default raw_name.default raw_name default src.url src url attributes.category attributes.category keyword attributes.uploader attributes.uploader keyword labels labels keyword tags.* tags.* keyword <p>Keyword</p> Full field name Field name Elasticsearch analyzer path.keyword path keyword name.keyword name keyword raw_name.keyword raw_name keyword src.keyword src keyword attributes.category attributes.category keyword attributes.uploader attributes.uploader keyword labels labels keyword tags.* tags.* keyword <p>Ngram</p> Full field name Field name Elasticsearch analyzer path.ngram path ngram name.ngram name ngram raw_name.ngram raw_name ngram src.ngram src ngram attributes.category attributes.category keyword attributes.uploader attributes.uploader keyword labels labels keyword tags.* tags.* keyword <p>Standard</p> Full field name Field name Elasticsearch analyzer path.standard path standard name.standard name standard raw_name.standard raw_name standard src.standard src standard attributes.category attributes.category keyword attributes.uploader attributes.uploader keyword labels labels keyword tags.* tags.* keyword <p>URL</p> Full field name Field name Elasticsearch analyzer path.url path url src.url src url"
        },
        {
            "location": "user-notes/searching/#fuzziness",
            "title": "Fuzziness",
            "text": "<p>The fuzziness value represents the minimum steps from one text sequence to another.^[2]</p>"
        },
        {
            "location": "user-notes/searching/#boolean",
            "title": "Boolean",
            "text": "<p>The default value is <code>Should</code>, which means it will return the results that match any of the keywords under any of the field names.</p> <p><code>Must</code> means that all tokens must be hit.</p>"
        },
        {
            "location": "user-notes/searching/#custom",
            "title": "Custom",
            "text": "<p>Users can create their own Elasticsearch query at <code>http://localhost:3000/settings/elasticsearch-search</code>.</p> Web screenshot <p></p>"
        },
        {
            "location": "user-notes/searching/#advanced-search",
            "title": "Advanced search",
            "text": "<p>Similar to searching with additional parameters, but more detailed.</p> Web screenshot <p> </p> <ol> <li> <p>https://www.elastic.co/guide/en/elasticsearch/reference/current/common-options.html#fuzziness \u21a9</p> </li> <li> <p>https://en.wikipedia.org/wiki/Levenshtein_distance \u21a9\u00a0\u21a9</p> </li> </ol>"
        },
        { "location": "user-notes/tests/user-behavior/", "title": "User behavior", "text": "" },
        { "location": "user-notes/tests/user-behavior/#search", "title": "Search", "text": "" },
        {
            "location": "user-notes/tests/user-behavior/#pagination",
            "title": "Pagination",
            "text": "<ul> <li>Previews of galleries</li> <li>Default</li> <li>Search</li> <li>Advanced search</li> <li>Preview images in gallery</li> <li>Preview of videos</li> <li>Bookmark</li> <li>CRUD table</li> </ul>"
        },
        { "location": "user-notes/tests/user-behavior/#gallery", "title": "Gallery", "text": "" },
        {
            "location": "user-notes/tests/user-behavior/#synchronizing",
            "title": "Synchronizing",
            "text": "<ul> <li>If the JSON file in the gallery is different from the document in Elasticsearch, we   should base on the JSON file and update the document in Elasticsearch.</li> <li>If the gallery is deleted from storage, the document must also be deleted from   Elasticsearch.</li> </ul>"
        }
    ]
}
